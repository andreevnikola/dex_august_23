"use client";
import Footer from "@/components/Footer";
import { faCaretRight, faInfo } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { motion } from "framer-motion";
import { useState } from "react";

function Error({ errorText = "" }) {
  return <p className="p-1 text-error">{errorText}</p>;
}

export default function NewDelivery() {
  const [step, setStep] = useState(1);
  const [errors, setErrors] = useState<string[]>([]);

  const pratkaTypeDescriptions = new Map();
  pratkaTypeDescriptions.set(
    "–ø—Ä–∞—Ç–∫–∞",
    "–ü—Ä–∞—Ç–∫–∞ –æ—Ç –∞–¥—Ä–µ—Å –¥–æ –∞–¥—Ä–µ—Å | –ù–æ—Ä–º–∞–ª–Ω–∞ –ø—Ä–∞—Ç–∫–∞. –û—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –æ—Ç –≤–∞—Å –∞–¥—Ä–µ—Å, –¥–æ —Ç–æ–∑–∏ –Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è!"
  );
  pratkaTypeDescriptions.set(
    "–∫—É–ø–∏",
    "–ö—É–ø–∏ –º–∏ | –®–æ—Ñ—å–æ—Ä—ä—Ç –æ—Ç–≥–æ–≤–æ—Ä–µ–Ω –∑–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ—Ç–æ –Ω–∞ –ø–æ—Ä—ä—á–∫–∞—Ç–∞ —Ç–∏ —â–µ –∑–∞–∫—É–ø–∏ –∂–µ–ª–∞–Ω–∏—Ç–µ –æ—Ç —Ç–µ–± –ø—Ä–æ–¥—É–∫—Ç–∏. –¶–µ–Ω–∞—Ç–∞ –Ω–µ –º–æ–∂–µ –¥–∞ –Ω–∞–¥–≤–∏—à–∞–≤–∞ 50–ª–≤."
  );

  const [typeServiceForm, setTypeServiceForm] = useState({
    type: "–ø—Ä–∞—Ç–∫–∞",
    description: "",
  });
  const verifyServiceForm = () => {
    if (
      typeServiceForm.type === "–∫—É–ø–∏" &&
      (typeServiceForm.description.length < 15 ||
        typeServiceForm.description.length > 250)
    )
      setErrors((errors) => [...errors, "serviceType.description"]);
    else setStep(2);
  };

  return (
    <>
      <div className="w-full flex min-h-screen justify-around items-center">
        <main className="w-full p-6 h-fit max-w-4xl relative -top-12 flex flex-col gap-3">
          <h1 className="text-neutral-focus font-extrabold text-4xl text-center mb-5 font-mono">
            –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞:
          </h1>
          <div className="tabs w-full sm:text-8xl">
            <a
              className={
                "tab tab-lifted max-sm:text-[0.6rem] " +
                (step === 1 ? "tab-active" : "")
              }
            >
              –í–∏–¥ –¥–æ—Å—Ç–∞–≤–∫–∞
            </a>
            <a
              className={
                "tab tab-lifted max-sm:text-[0.6rem] " +
                (step === 2 ? "tab-active" : "")
              }
            >
              –ü–æ–ª—É—á–∞—Ç–µ–ª
            </a>
            <a
              className={
                "tab tab-lifted max-sm:text-[0.6rem] " +
                (step === 3 ? "tab-active" : "")
              }
            >
              –ê–¥—Ä–µ—Å–∏
            </a>
            <a
              className={
                "tab tab-lifted max-sm:text-[0.6rem] " +
                (step === 4 ? "tab-active" : "")
              }
            >
              –ü–ª–∞—â–∞–Ω–µ
            </a>
            <a
              className={
                "tab tab-lifted flex-grow cursor-default p-0" +
                (step === 5 ? "tab-active" : "")
              }
            ></a>
          </div>
          {step === 1 && (
            <form
              onSubmit={(e) => {
                e.preventDefault();
                verifyServiceForm();
              }}
            >
              <motion.section
                initial={{ opacity: 0, x: 200 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: 200 }}
                className="flex flex-col gap-4"
              >
                <div className="form-control relative">
                  <label className="input-group input-group-vertical">
                    <span className="w-full text-center flex justify-around">
                      –í–∏–¥ –Ω–∞ –∑–∞—è–≤–∫–∞—Ç–∞
                    </span>
                    <div className="border-l border-r border-neutral-content p-4">
                      <p className="text-md">
                        <strong className="text-lg font-bold">
                          {
                            pratkaTypeDescriptions
                              .get(typeServiceForm?.type)
                              .split(" | ")[0]
                          }
                          :
                        </strong>{" "}
                        {
                          pratkaTypeDescriptions
                            .get(typeServiceForm?.type)
                            .split(" | ")[1]
                        }
                      </p>
                    </div>
                    <select
                      className="select select-bordered select-lg"
                      onChange={(e: any) =>
                        setTypeServiceForm((form: any) => ({
                          ...form,
                          type: e.target!.value,
                        }))
                      }
                    >
                      <option value="–ø—Ä–∞—Ç–∫–∞">–ü—Ä–∞—Ç–∫–∞ –æ—Ç –∞–¥—Ä–µ—Å –¥–æ –∞–¥—Ä–µ—Å </option>
                      <option value="–∫—É–ø–∏">–ö—É–ø–∏ –º–∏</option>
                    </select>
                  </label>
                </div>
                {typeServiceForm?.type === "–∫—É–ø–∏" && (
                  <div className="form-control">
                    <label className="input-group input-group-vertical">
                      <span className="w-full text-center flex justify-around">
                        –û–ø–∏—à–µ—Ç–µ –∂–µ–ª–∞–Ω–∏—Ç–µ –æ—Ç –≤–∞—Å –ø—Ä–æ–¥—É–∫—Ç–∏
                      </span>
                      <textarea
                        onChange={(e: any) =>
                          setTypeServiceForm((form: any) => ({
                            ...form,
                            description: e.target!.value,
                          }))
                        }
                        className="textarea textarea-bordered"
                        placeholder="–û–ø–∏—à–µ—Ç–µ –ø—Ä–æ–¥—É–∫—Ç–∏—Ç–µ –∫–æ–∏—Ç–æ –∏—Å–∫–∞—Ç–µ –¥–∞ –±—ä–¥–∞—Ç –∑–∞–∫—É–ø–µ–Ω–∏, –¥–∞–π—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞ –º–µ—Å—Ç–∞ –æ—Ç –∫–æ–∏—Ç–æ –º–æ–≥–∞—Ç –¥–∞ –±—ä–¥–∞—Ç –∑–∞–∫—É–ø–µ–Ω–∏."
                      ></textarea>
                    </label>
                    {errors.includes("serviceType.description") && (
                      <Error errorText="–û–ø–∏—Å–∞–Ω–∏–µ—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ –º–µ–∂–¥—É 15 –∏ 250 –∑–Ω–∞–∫–∞" />
                    )}
                  </div>
                )}
                <button className="btn btn-block">
                  –°–ª–µ–¥–≤–∞—â–∞ —Å—Ç—ä–ø–∫–∞ <FontAwesomeIcon icon={faCaretRight} />
                </button>
              </motion.section>
            </form>
          )}
          {step === 2 && (
            <motion.section
              initial={{ opacity: 0, x: 200 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: 200 }}
              className="flex flex-col gap-2"
            >
              <div className="form-control">
                <label className="label">
                  <span className="label-text text-lg">
                    –¢–µ–ª–µ—Ñ–æ–Ω –Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª:
                  </span>
                </label>
                <label className="input-group input-group-lg w-full">
                  <select className="select select-bordered select-lg">
                    <option data-countryCode="BG" value="+359">
                      üáßüá¨ +359
                    </option>
                  </select>
                  <input
                    type="text"
                    placeholder="896405024"
                    className="input input-bordered input-lg w-full"
                  />
                </label>
              </div>
              <div className="form-control">
                <label className="input-group input-group-vertical">
                  <span className="w-full text-center flex justify-around">
                    –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø—Ä–∞—Ç–∫–∞—Ç–∞
                  </span>
                  <input
                    type="text"
                    placeholder="–ó–∞–≥–ª–∞–≤–∏–µ —Å—ä–¥—ä—Ä–∂–∞—â–æ —Å—ä—Å—Ç–∞–≤–∞ –Ω–∞ –ø—Ä–∞—Ç–∫–∞—Ç–∞ –∏ –ø—Ä–∏—á–∏–Ω–∞"
                    className="input input-bordered"
                  />
                  <textarea
                    className="textarea textarea-bordered"
                    placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—Ä–∞—Ç–∫–∞—Ç–∞"
                  ></textarea>
                </label>
              </div>
            </motion.section>
          )}
        </main>
      </div>
      <Footer />
    </>
  );
}
